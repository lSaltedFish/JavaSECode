1.如何理解多态性？
    理解：理解为一个事物的多种形态。

2.Java中的多态性的体现：
    子类对象的多态性：父类的引用指向子类的对象。（或子类的对象赋给父类的引用）
    比如：Person p = new Man();

3.多态性的应用：
    多态性的应用：虚拟方法调用

    在多态的场景下，调用方法时：
    编译时，认为方法时左边声明的父类的类型的方法（即被重写的方法）
    执行时，实际执行的是子类重写父类的方法。
  简称为：编译看左边，运行看右边。

    在开发中使用父类做方法的形参，是多态使用最多的场合。即使增加了新的子类，方法也无需改变，提高了扩展性，符合开闭原则。
    【开闭原则OCP】
    ·对扩展开放，对修改关闭
    ·通俗解释：软件系统中的各种组件，如模块、类以及功能等，应该在不修改现有代码的基础上，引入新功能

4.多态性的使用前提：①要有类的继承关系②要有方法的重写


5.多态的适用性：适用于方法，不适用于属性。


6.多态的好处与弊端
6.1弊端：
    在多态的场景下，我们创建了子类的对象，也加载了子类特有的属性和方法。但是由于声明为父类的引用，
    导致我们没有办法直接调用子类特有的属性和方法。

6.2好处：极大的减少了代码的冗余，不需要定义多个重载的方法。

7.instanceof关键词判断对象类型
  a instanceof A   判断对象a是否是类A的实例